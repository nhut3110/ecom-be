{
  "name": "nest-typescript-starter",
  "private": true,
  "version": "1.0.0",
  "description": "Nest TypeScript starter repository",
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "cross-env NODE_ENV=dev nest start --watch",
    "start:test": "cross-env NODE_ENV=test nest start --watch",
    "start:debug": "cross-env NODE_ENV=dev nest start --debug --watch",
    "start:prod": "cross-env NODE_ENV=prod node --max-old-space-size=2048 dist/main",
    "deploy": "concurrently \"cross-env NODE_ENV=prod PORT=3000 node --max-old-space-size=2048 dist/main\" \"cross-env NODE_ENV=prod PORT=3001 node --max-old-space-size=2048 dist/main\" \"cross-env NODE_ENV=prod PORT=3002 node --max-old-space-size=2048 dist/main\"",
    "migrate:up": " npx sequelize-cli db:migrate --env dev",
    "migrate:down": "npx sequelize-cli db:migrate:undo --env dev",
    "migrate:create": "npx sequelize-cli migration:generate --name",
    "seed:dev": "npx sequelize-cli db:seed:all --env dev",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^1.8.1",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/cache-manager": "^1.0.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.3.4",
    "@nestjs/core": "^9.0.5",
    "@nestjs/jwt": "^10.0.3",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^9.0.3",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/sequelize": "^9.0.2",
    "@nestjs/swagger": "^6.3.0",
    "@types/ms": "^0.7.31",
    "@types/passport-local": "^1.0.35",
    "@types/redis": "^4.0.11",
    "axios": "^1.6.8",
    "bcrypt": "^5.1.0",
    "buffer-to-stream": "^1.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cloudinary": "^1.37.0",
    "cross-env": "^7.0.3",
    "crypto": "^1.0.1",
    "googleapis": "^120.0.0",
    "handlebars": "^4.7.7",
    "joi": "^17.9.2",
    "js-yaml": "^4.1.0",
    "jwt-decode": "^3.1.2",
    "moment": "^2.30.1",
    "ms": "^3.0.0-canary.1",
    "nodemailer": "^6.9.3",
    "passport": "^0.6.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.0",
    "qs": "^6.12.1",
    "redis": "^4.6.7",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.5.5",
    "sequelize": "^6.31.1",
    "sequelize-hierarchy": "^2.0.4",
    "sequelize-typescript": "^2.1.5",
    "vnpay": "^1.1.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/cache-manager": "^4.0.1",
    "@types/cache-manager-redis-store": "^2.0.1",
    "@types/express": "^4.17.17",
    "@types/jest": "^28.1.4",
    "@types/js-yaml": "^4.0.5",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.0.3",
    "@types/nodemailer": "^6.4.8",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/passport-jwt": "^3.0.8",
    "@types/sequelize": "^4.28.15",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "concurrently": "^8.2.2",
    "eslint": "^8.19.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^28.1.2",
    "prettier": "^2.7.1",
    "sequelize-cli": "^6.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^6.2.4",
    "ts-jest": "^28.0.5",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.0.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
